#!/bin/bash
# Music Player Daemon Controller
# Made by Yaroslav Levkin
# A.K.A SkullGamer205

mpc_single()      { mpc status | grep 'single: on'; }
mpc_repeat()      { mpc status | grep 'repeat: on'; }
mpc_random()      { mpc status | grep 'random: on'; }
mpc_consume()     { mpc status | grep 'consume: on'; }
mpc_play()        { mpc status | grep -E 'playing'; }
mpc_paused()      { mpc status | grep -E 'paused'; }
mpc_working()     { mpc status | grep -E 'playing|paused'; }
mpc_paused_cmd()  { mpc current
		    mpc status | grep -E "paused" | cut -c 11-48; }
mpc_playing_cmd() { mpc current
		    mpc status | grep -E "playing" | cut -c 11-48; }
mpc_volume()      { mpc status | grep -E "volume:" | cut -c 8-12; }

mpc_notify()      { notify-send --app-name=mpd 'Music Player Daemon' --icon="$HOME"/.icons/oomox-AAA_upscayl_4x_realesrgan-x4plus-anime/16x16/categories/mpd.svg --urgency=normal --category='Music Player Daemon' "$@"; }

mpdc_help() { echo '
Music Player Daemon Controller
Made by Yaroslav Levkin
A.K.A SkullGamer205
- - - - - - - - - - - - - - - -
single         -- toggle single mode, or specify state
repeat         -- toggle repeat mode, or specify state
random         -- toggle random mode, or specify state
consume        -- toggle consume mode, or specify state
toggle         -- toggles Play/Pause, plays if stopped
stop           -- stop the currently playing playlists
now            -- display now palyed track
next           -- play the next song in the current playlist
prev           -- play the previous song in the current playlist
volup          -- Adds volume
voldown        -- Subtracts volume
alltracks      -- Calls up the "rofi" to select a track from the your MUSIC_DIR.
currenttracks  -- Calls up the "rofi" to select a track from the your playlist.';
	    }

mpdc_single () {
    eval "(mpc_single)"
if [[ -n "$(mpc_single)" ]]; then
    mpc single off
    mpc_notify "‚ñ∂Ô∏è –û–¥–∏–Ω–æ—á–Ω—ã–π —Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω"
else
    mpc single on
    mpc_notify "üîÇ –û–¥–∏–Ω–æ—á–Ω—ã–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω"
fi
}

mpdc_repeat () {
    eval "$(mpc_repeat)"
if [[ -n "$(mpc_repeat)" ]]; then
    mpc repeat off
    mpc_notify "‚ñ∂ –ü–æ–≤—Ç–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω"
else
    mpc repeat on
    mpc_notify "üîÅ –ü–æ–≤—Ç–æ—Ä –≤–∫–ª—é—á–µ–Ω"
fi
}

mpdc_random () {
    eval "$(mpc_random)"
if [[ -n "$(mpc_random)" ]]; then
    mpc random off
    mpc_notify "‚ñ∂Ô∏è –°–ª—É—á–∞–π–Ω—ã–π —Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω"
else
    mpc random on
    mpc_notify "üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω"
fi
}

mpdc_consume () {
    eval "$(mpc_consume)"
if [[ -n "$(mpc_consume)" ]]; then
    mpc consume off
    mpc_notify "‚ñ∂Ô∏è –†–µ–∂–∏–º —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω"
else
    mpc consume on
    mpc_notify "üóëÔ∏è Ô∏è–†–µ–∂–∏–º —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω"
fi
}

mpdc_toggle () {
    eval "$(mpc_play)" && eval "$(mpc_paused)"
if [[ -n "$(mpc_play)" ]]; then
    mpc pause
    mpc_notify "‚è∏Ô∏è [–ù–∞ –ø–∞—É–∑–µ]\n$(mpc_paused_cmd)"
elif [[ -n "$(mpc_paused)" ]]; then
    mpc play
    mpc_notify "‚ñ∂Ô∏è [–ò–≥—Ä–∞–µ—Ç]\n$(mpc_playing_cmd)"
else
    mpc play
    mpc_notify "‚ñ∂Ô∏è [–ó–∞–ø—É—â–µ–Ω]\n$(mpc_playing_cmd)"
fi
}

mpdc_stop() {
    eval "$(mpc_working)"
if [[ "$(mpc_working)" =~ "paused" ]] || [[ "$(mpc_working)" =~ "playing" ]]; then
    mpc_notify "‚èπÔ∏è [–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω]"
    mpc stop
elif ! [[ "$(mpc_working)" =~ "paused" ]] || ! [[ "$(mpc_working)" =~ "playing" ]]; then
    mpc_notify "‚èπÔ∏è [–£–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω]"
    mpc stop
fi
}

mpdc_now()     { mpc_notify "$(mpc -f '–ò–≥—Ä–∞–µ—Ç: %artist% - %title% \n–§–∞–π–ª: ./%file%')"; }
mpdc_next()    { mpc next && sleep 0.1 && mpc_notify "‚è≠Ô∏è [–°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫]\n$(mpc_playing_cmd)"; }
mpdc_prev()    { mpc prev && sleep 0.1 && mpc_notify "‚èÆÔ∏è [–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫]\n$(mpc_playing_cmd)"; }
mpdc_volup()   { mpc volume +5 && sleep 0.1 && mpc_notify "üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å: $(mpc_volume)"; }
mpdc_voldown() { mpc volume -5 && sleep 0.1 && mpc_notify "üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å: $(mpc_volume)"; }

mpdc_alltracks() {
mpc_alltracks=$(mpc listall | rofi -no-config -dmenu -theme "/home/skullgamer205/.config/rofi/rofi.rasi" -p "$(mpc status)" )
  if ! [[ "$(mpc_working)" =~ "paused" ]] || ! [[ "$(mpc_working)" =~ "playing" ]]; then
  mpc play; fi
  if [[ $mpc_alltracks != "" ]]; then
  mpc insert "$mpc_alltracks"; mpc next
  fi
}

mpdc_currenttracks() {
mpc_currenttracks=$(mpc playlist | rofi -no-config -dmenu -theme "/home/skullgamer205/.config/rofi/rofi.rasi" -p "$(mpc status)" )
  if ! [[ "$(mpc_working)" =~ "paused" ]] || ! [[ "$(mpc_working)" =~ "playing" ]]; then
  mpc play; fi
  if [[ $mpc_currenttracks != "" ]]; then
  mpc insert "$mpc_currenttracks"; mpc next
  fi
}

case "$1" in
    "--single") mpdc_single; exit ;;
    "--repeat") mpdc_repeat; exit ;;
    "--random") mpdc_random; exit ;;
    "--consume") mpdc_consume; exit ;;
    "--toggle") mpdc_toggle; exit ;;
    "--stop") mpdc_stop; exit ;;
    "--now") mpdc_now;exit ;;
    "--next") mpdc_next;exit ;;
    "--prev") mpdc_prev;exit ;;
    "--volup") mpdc_volup;exit ;;
    "--voldown") mpdc_voldown;exit ;;
    "--alltracks") mpdc_alltracks;exit ;;
    "--currenttracks") mpdc_currenttracks;exit ;;
    "--help") mpdc_help;exit ;;
    *)    echo 'Incorrect command. See "./mpd.sh --help" for more help. ';exit ;;
esac
